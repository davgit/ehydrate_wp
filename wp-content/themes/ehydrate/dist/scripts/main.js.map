{"version":3,"sources":["../bower_components/vide/dist/jquery.vide.js","../assets/scripts/main.js"],"names":["root","factory","define","amd","exports","require","jQuery","this","$","parseOptions","str","delimiterIndex","option","prop","val","arr","len","i","obj","replace","split","length","search","indexOf","substring","undefined","isNaN","parsePosition","arg","args","x","y","findPoster","path","callback","onLoad","src","load","Vide","element","options","$element","hasOwnProperty","settings","extend","DEFAULTS","init","PLUGIN_NAME","volume","playbackRate","muted","loop","autoplay","position","posterType","resizing","prototype","poster","vide","sources","$wrapper","css","z-index","top","left","bottom","right","overflow","-webkit-background-size","-moz-background-size","-o-background-size","background-size","background-repeat","background-position","mp4","webm","ogv","url","prepend","$video","defaultMuted","defaultPlaybackRate","margin","-webkit-transform","-ms-transform","-moz-transform","transform","visibility","one","resize","on","append","getVideoObject","videoHeight","videoWidth","wrapperHeight","height","wrapperWidth","width","destroy","off","lookup","index","removeData","remove","fn","instance","each","data","push","document","ready","$window","window","find","Sage","common","UTIL","replaceSvgImgWithInlineSvg","windowScrollTimer","finalize","home","about_us","fire","func","funcname","namespace","loadEvents","body","className","classnm","console","log","$img","imgID","attr","imgClass","imgURL","get","$svg","removeAttr","replaceWith","scroll","clearTimeout","setTimeout","$scrollTopPx","scrollTop","editNavbarClassesOnScroll","scrollTopPx","stpx","$headerNavbar","first","removeClass","addClass"],"mappings":"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","file":"main.js","sourcesContent":["/*\n *  Vide - v0.3.5\n *  Easy as hell jQuery plugin for video backgrounds.\n *  http://vodkabears.github.io/vide/\n *\n *  Made by Ilya Makarov\n *  Under MIT License\n */\n!(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  } else if (typeof exports === 'object') {\n    factory(require('jquery'));\n  } else {\n    factory(root.jQuery);\n  }\n})(this, function($) {\n\n  'use strict';\n\n  /**\n   * Name of the plugin\n   * @private\n   * @const\n   * @type {String}\n   */\n  var PLUGIN_NAME = 'vide';\n\n  /**\n   * Default settings\n   * @private\n   * @const\n   * @type {Object}\n   */\n  var DEFAULTS = {\n    volume: 1,\n    playbackRate: 1,\n    muted: true,\n    loop: true,\n    autoplay: true,\n    position: '50% 50%',\n    posterType: 'detect',\n    resizing: true\n  };\n\n  /**\n   * Parse a string with options\n   * @private\n   * @param {String} str\n   * @returns {Object|String}\n   */\n  function parseOptions(str) {\n    var obj = {};\n    var delimiterIndex;\n    var option;\n    var prop;\n    var val;\n    var arr;\n    var len;\n    var i;\n\n    // Remove spaces around delimiters and split\n    arr = str.replace(/\\s*:\\s*/g, ':').replace(/\\s*,\\s*/g, ',').split(',');\n\n    // Parse a string\n    for (i = 0, len = arr.length; i < len; i++) {\n      option = arr[i];\n\n      // Ignore urls and a string without colon delimiters\n      if (\n        option.search(/^(http|https|ftp):\\/\\//) !== -1 ||\n        option.search(':') === -1\n      ) {\n        break;\n      }\n\n      delimiterIndex = option.indexOf(':');\n      prop = option.substring(0, delimiterIndex);\n      val = option.substring(delimiterIndex + 1);\n\n      // If val is an empty string, make it undefined\n      if (!val) {\n        val = undefined;\n      }\n\n      // Convert a string value if it is like a boolean\n      if (typeof val === 'string') {\n        val = val === 'true' || (val === 'false' ? false : val);\n      }\n\n      // Convert a string value if it is like a number\n      if (typeof val === 'string') {\n        val = !isNaN(val) ? +val : val;\n      }\n\n      obj[prop] = val;\n    }\n\n    // If nothing is parsed\n    if (prop == null && val == null) {\n      return str;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Parse a position option\n   * @private\n   * @param {String} str\n   * @returns {Object}\n   */\n  function parsePosition(str) {\n    str = '' + str;\n\n    // Default value is a center\n    var args = str.split(/\\s+/);\n    var x = '50%';\n    var y = '50%';\n    var len;\n    var arg;\n    var i;\n\n    for (i = 0, len = args.length; i < len; i++) {\n      arg = args[i];\n\n      // Convert values\n      if (arg === 'left') {\n        x = '0%';\n      } else if (arg === 'right') {\n        x = '100%';\n      } else if (arg === 'top') {\n        y = '0%';\n      } else if (arg === 'bottom') {\n        y = '100%';\n      } else if (arg === 'center') {\n        if (i === 0) {\n          x = '50%';\n        } else {\n          y = '50%';\n        }\n      } else {\n        if (i === 0) {\n          x = arg;\n        } else {\n          y = arg;\n        }\n      }\n    }\n\n    return { x: x, y: y };\n  }\n\n  /**\n   * Search a poster\n   * @private\n   * @param {String} path\n   * @param {Function} callback\n   */\n  function findPoster(path, callback) {\n    var onLoad = function() {\n      callback(this.src);\n    };\n\n    $('<img src=\"' + path + '.gif\">').load(onLoad);\n    $('<img src=\"' + path + '.jpg\">').load(onLoad);\n    $('<img src=\"' + path + '.jpeg\">').load(onLoad);\n    $('<img src=\"' + path + '.png\">').load(onLoad);\n  }\n\n  /**\n   * Vide constructor\n   * @param {HTMLElement} element\n   * @param {Object|String} path\n   * @param {Object|String} options\n   * @constructor\n   */\n  function Vide(element, path, options) {\n    this.$element = $(element);\n\n    // Parse path\n    if (typeof path === 'string') {\n      path = parseOptions(path);\n    }\n\n    // Parse options\n    if (!options) {\n      options = {};\n    } else if (typeof options === 'string') {\n      options = parseOptions(options);\n    }\n\n    // Remove an extension\n    if (typeof path === 'string') {\n      path = path.replace(/\\.\\w*$/, '');\n    } else if (typeof path === 'object') {\n      for (var i in path) {\n        if (path.hasOwnProperty(i)) {\n          path[i] = path[i].replace(/\\.\\w*$/, '');\n        }\n      }\n    }\n\n    this.settings = $.extend({}, DEFAULTS, options);\n    this.path = path;\n\n    this.init();\n  }\n\n  /**\n   * Initialization\n   * @public\n   */\n  Vide.prototype.init = function() {\n    var vide = this;\n    var position = parsePosition(vide.settings.position);\n    var sources = '';\n    var poster;\n\n    // Set styles of a video wrapper\n    vide.$wrapper = $('<div>').css({\n      position: 'absolute',\n      'z-index': -1,\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      overflow: 'hidden',\n      '-webkit-background-size': 'cover',\n      '-moz-background-size': 'cover',\n      '-o-background-size': 'cover',\n      'background-size': 'cover',\n      'background-repeat': 'no-repeat',\n      'background-position': position.x + ' ' + position.y\n    });\n\n    // Get a poster path\n    poster = vide.path;\n    if (typeof vide.path === 'object') {\n      if (vide.path.poster) {\n        poster = vide.path.poster;\n      } else {\n        if (vide.path.mp4) {\n          poster = vide.path.mp4;\n        } else if (vide.path.webm) {\n          poster = vide.path.webm;\n        } else if (vide.path.ogv) {\n          poster = vide.path.ogv;\n        }\n      }\n    }\n\n    // Set a video poster\n    if (vide.settings.posterType === 'detect') {\n      findPoster(poster, function(url) {\n        vide.$wrapper.css('background-image', 'url(' + url + ')');\n      });\n    } else if (vide.settings.posterType !== 'none') {\n      vide.$wrapper\n        .css('background-image', 'url(' + poster + '.' + vide.settings.posterType + ')');\n    }\n\n    // If a parent element has a static position, make it relative\n    if (vide.$element.css('position') === 'static') {\n      vide.$element.css('position', 'relative');\n    }\n\n    vide.$element.prepend(vide.$wrapper);\n\n    if (typeof vide.path === 'object') {\n      if (vide.path.mp4) {\n        sources += '<source src=\"' + vide.path.mp4 + '.mp4\" type=\"video/mp4\">';\n      }\n\n      if (vide.path.webm) {\n        sources += '<source src=\"' + vide.path.webm + '.webm\" type=\"video/webm\">';\n      }\n\n      if (vide.path.ogv) {\n        sources += '<source src=\"' + vide.path.ogv + '.ogv\" type=\"video/ogv\">';\n      }\n\n      vide.$video = $('<video>' + sources + '</video>');\n    } else {\n      vide.$video = $('<video>' +\n        '<source src=\"' + vide.path + '.mp4\" type=\"video/mp4\">' +\n        '<source src=\"' + vide.path + '.webm\" type=\"video/webm\">' +\n        '<source src=\"' + vide.path + '.ogv\" type=\"video/ogg\">' +\n        '</video>');\n    }\n\n    vide.$video\n\n      // Set video properties\n      .prop({\n        autoplay: vide.settings.autoplay,\n        loop: vide.settings.loop,\n        volume: vide.settings.volume,\n        muted: vide.settings.muted,\n        defaultMuted: vide.settings.muted,\n        playbackRate: vide.settings.playbackRate,\n        defaultPlaybackRate: vide.settings.playbackRate\n      })\n\n      // Video alignment\n      .css({\n        margin: 'auto',\n        position: 'absolute',\n        'z-index': -1,\n        top: position.y,\n        left: position.x,\n        '-webkit-transform': 'translate(-' + position.x + ', -' + position.y + ')',\n        '-ms-transform': 'translate(-' + position.x + ', -' + position.y + ')',\n        '-moz-transform': 'translate(-' + position.x + ', -' + position.y + ')',\n        transform: 'translate(-' + position.x + ', -' + position.y + ')',\n\n        // Disable visibility, while loading\n        visibility: 'hidden'\n      })\n\n      // Resize a video, when it's loaded\n      .one('canplaythrough.' + PLUGIN_NAME, function() {\n        vide.resize();\n      })\n\n      // Make it visible, when it's already playing\n      .one('playing.' + PLUGIN_NAME, function() {\n        vide.$video.css('visibility', 'visible');\n        vide.$wrapper.css('background-image', 'none');\n      });\n\n    // Resize event is available only for 'window'\n    // Use another code solutions to detect DOM elements resizing\n    vide.$element.on('resize.' + PLUGIN_NAME, function() {\n      if (vide.settings.resizing) {\n        vide.resize();\n      }\n    });\n\n    // Append a video\n    vide.$wrapper.append(vide.$video);\n  };\n\n  /**\n   * Get a video element\n   * @public\n   * @returns {HTMLVideoElement}\n   */\n  Vide.prototype.getVideoObject = function() {\n    return this.$video[0];\n  };\n\n  /**\n   * Resize a video background\n   * @public\n   */\n  Vide.prototype.resize = function() {\n    if (!this.$video) {\n      return;\n    }\n\n    // Get a native video size\n    var videoHeight = this.$video[0].videoHeight;\n    var videoWidth = this.$video[0].videoWidth;\n\n    // Get a wrapper size\n    var wrapperHeight = this.$wrapper.height();\n    var wrapperWidth = this.$wrapper.width();\n\n    if (wrapperWidth / videoWidth > wrapperHeight / videoHeight) {\n      this.$video.css({\n\n        // +2 pixels to prevent an empty space after transformation\n        width: wrapperWidth + 2,\n        height: 'auto'\n      });\n    } else {\n      this.$video.css({\n        width: 'auto',\n\n        // +2 pixels to prevent an empty space after transformation\n        height: wrapperHeight + 2\n      });\n    }\n  };\n\n  /**\n   * Destroy a video background\n   * @public\n   */\n  Vide.prototype.destroy = function() {\n    this.$element.off(PLUGIN_NAME);\n\n    if (this.$video) {\n      this.$video.off(PLUGIN_NAME);\n    }\n\n    delete $[PLUGIN_NAME].lookup[this.index];\n    this.$element.removeData(PLUGIN_NAME);\n    this.$wrapper.remove();\n  };\n\n  /**\n   * Special plugin object for instances.\n   * @public\n   * @type {Object}\n   */\n  $[PLUGIN_NAME] = {\n    lookup: []\n  };\n\n  /**\n   * Plugin constructor\n   * @param {Object|String} path\n   * @param {Object|String} options\n   * @returns {JQuery}\n   * @constructor\n   */\n  $.fn[PLUGIN_NAME] = function(path, options) {\n    var instance;\n\n    this.each(function() {\n      instance = $.data(this, PLUGIN_NAME);\n\n      if (instance) {\n\n        // Destroy the plugin instance if exists\n        instance.destroy();\n      }\n\n      // Create the plugin instance\n      instance = new Vide(this, path, options);\n      instance.index = $[PLUGIN_NAME].lookup.push(instance) - 1;\n      $.data(this, PLUGIN_NAME, instance);\n    });\n\n    return this;\n  };\n\n  $(document).ready(function() {\n    var $window = $(window);\n\n    // Window resize event listener\n    $window.on('resize.' + PLUGIN_NAME, function() {\n      for (var len = $[PLUGIN_NAME].lookup.length, i = 0, instance; i < len; i++) {\n        instance = $[PLUGIN_NAME].lookup[i];\n\n        if (instance && instance.settings.resizing) {\n          instance.resize();\n        }\n      }\n    });\n\n    // https://github.com/VodkaBears/Vide/issues/68\n    $window.on('unload.' + PLUGIN_NAME, function() {\n      return false;\n    });\n\n    // Auto initialization\n    // Add 'data-vide-bg' attribute with a path to the video without extension\n    // Also you can pass options throw the 'data-vide-options' attribute\n    // 'data-vide-options' must be like 'muted: false, volume: 0.5'\n    $(document).find('[data-' + PLUGIN_NAME + '-bg]').each(function(i, element) {\n      var $element = $(element);\n      var options = $element.data(PLUGIN_NAME + '-options');\n      var path = $element.data(PLUGIN_NAME + '-bg');\n\n      $element[PLUGIN_NAME](path, options);\n    });\n  });\n\n});\n","/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n *\n * Google CDN, Latest jQuery\n * To use the default WordPress version of jQuery, go to lib/config.php and\n * remove or comment out: add_theme_support('jquery-cdn');\n * ======================================================================== */\n\n(function($) {\n\n  // Use this variable to set up the common and page specific functions. If you\n  // rename this variable, you will also need to rename the namespace below.\n  var Sage = {\n    // All pages\n    'common': {\n      init: function() {\n        // JavaScript to be fired on all pages\n        UTIL.replaceSvgImgWithInlineSvg();\n        UTIL.windowScrollTimer();\n      },\n      finalize: function() {\n        // JavaScript to be fired on all pages, after page specific JS is fired\n      }\n    },\n    // Home page\n    'home': {\n      init: function() {\n        // JavaScript to be fired on the home page\n\n        $('#main-hero-home').vide({\n          mp4: 'http://vodkabears.github.io/vide/video/ocean.mp4',\n          webm: 'http://vodkabears.github.io/vide/video/ocean.webm',\n          ogv: 'http://vodkabears.github.io/vide/video/ocean.ogv',\n          poster: 'http://vodkabears.github.io/vide/video/ocean.jpg'\n        }, {\n          volume: 0,\n          playbackRate: 1,\n          muted: true,\n          loop: true,\n          autoplay: true,\n          position: '50% 50%', // Similar to the CSS `background-position` property.\n          posterType: 'jpg', // Poster image type. \"detect\" — auto-detection; \"none\" — no poster; \"jpg\", \"png\", \"gif\",... - extensions.\n          resizing: true // Auto-resizing, read: https://github.com/VodkaBears/Vide#resizing\n        });\n\n      },\n      finalize: function() {\n        // JavaScript to be fired on the home page, after the init JS\n      }\n    },\n    // About us page, note the change from about-us to about_us.\n    'about_us': {\n      init: function() {\n        // JavaScript to be fired on the about us page\n      }\n    }\n  };\n\n  // The routing fires all common scripts, followed by the page specific scripts.\n  // Add additional events for more control over timing e.g. a finalize event\n  var UTIL = {\n    fire: function(func, funcname, args) {\n      var fire;\n      var namespace = Sage;\n      funcname = (funcname === undefined) ? 'init' : funcname;\n      fire = func !== '';\n      fire = fire && namespace[func];\n      fire = fire && typeof namespace[func][funcname] === 'function';\n\n      if (fire) {\n        namespace[func][funcname](args);\n      }\n    },\n    loadEvents: function() {\n      // Fire common init JS\n      UTIL.fire('common');\n\n      // Fire page-specific init JS, and then finalize JS\n      $.each(document.body.className.replace(/-/g, '_').split(/\\s+/), function(i, classnm) {\n        UTIL.fire(classnm);\n        UTIL.fire(classnm, 'finalize');\n      });\n\n      // Fire common finalize JS\n      UTIL.fire('common', 'finalize');\n    },\n    replaceSvgImgWithInlineSvg: function() {\n      console.log('replacing all svg imgs with inline svg');\n      jQuery('img[src$=\".svg\"]').each(function(){\n          var $img = jQuery(this);\n          var imgID = $img.attr('id');\n          var imgClass = $img.attr('class');\n          var imgURL = $img.attr('src');\n  \n          jQuery.get(imgURL, function(data) {\n              // Get the SVG tag, ignore the rest\n              var $svg = jQuery(data).find('svg');\n  \n              // Add replaced image's ID to the new SVG\n              if(typeof imgID !== 'undefined') {\n                  $svg = $svg.attr('id', imgID);\n              }\n              // Add replaced image's classes to the new SVG\n              if(typeof imgClass !== 'undefined') {\n                  $svg = $svg.attr('class', imgClass+' replaced-svg');\n              }\n              \n              // Remove any invalid XML tags as per http://validator.w3.org\n              $svg = $svg.removeAttr('xmlns:a');\n              \n              // Replace image with new SVG\n              $img.replaceWith($svg);\n          });\n\n      });\n    },\n    windowScrollTimer: function() {\n\n      $(window).scroll(function() {\n          clearTimeout($.data(this, 'scrollTimer'));\n          $.data(this, 'scrollTimer', setTimeout(function() {\n              console.log(\"Fired scrollTimer after 140ms\");\n              var $scrollTopPx = $(window).scrollTop();\n              console.log($scrollTopPx);\n              UTIL.editNavbarClassesOnScroll($scrollTopPx);\n          }, 140));\n      });\n\n    },\n    editNavbarClassesOnScroll: function(scrollTopPx) {\n      var stpx = (scrollTopPx) ? scrollTopPx : 0;\n      var $headerNavbar = $('body > header .navbar').first();\n      if(!$headerNavbar.length){console.log('no navbar to target');return false;}\n      if (stpx > 75) {\n        $headerNavbar.removeClass('navbar-lg navbar-transparent').addClass('navbar-fixed-top');\n      }\n      if (stpx < 76) {\n        $headerNavbar.addClass('navbar-lg navbar-transparent').removeClass('navbar-fixed-top');\n      }\n    }\n  };\n\n  // Load Events\n  $(document).ready(UTIL.loadEvents);\n\n})(jQuery); // Fully reference jQuery after this point.\n"],"sourceRoot":"/source/"}